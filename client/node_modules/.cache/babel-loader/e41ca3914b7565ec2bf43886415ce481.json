{"ast":null,"code":"import axios from 'axios';\nexport const REVERSED_TEXT = \"REVERSED_TEXT\";\nexport default function getReversedText(query) {\n  return function (dispatch) {\n    try {\n      axios.get(`/iecho?text=${query}`).then(reversedWord => {\n        return dispatch({\n          type: REVERSED_TEXT,\n          payload: reversedWord.data\n        });\n      }).catch(error => console.log(error));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\n;","map":{"version":3,"names":["axios","REVERSED_TEXT","getReversedText","query","dispatch","get","then","reversedWord","type","payload","data","catch","error","console","log"],"sources":["/home/genaro/Documents/Programacion/Proyectos/CopyWriteChallenge/client/src/redux/actions/actions.js"],"sourcesContent":["import axios from 'axios';\nexport const REVERSED_TEXT = \"REVERSED_TEXT\";\n\nexport default function getReversedText(query) {\n    return function (dispatch) {\n        try {\n                axios.get(`/iecho?text=${query}`)\n                    .then(reversedWord => {\n                        return dispatch({ type: REVERSED_TEXT, payload: reversedWord.data })\n                    })\n                    .catch(error => console.log(error));\n        } catch (error) {\n            console.log(error)\n        }\n    }\n};"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,aAAa,GAAG,eAAtB;AAEP,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;EAC3C,OAAO,UAAUC,QAAV,EAAoB;IACvB,IAAI;MACIJ,KAAK,CAACK,GAAN,CAAW,eAAcF,KAAM,EAA/B,EACKG,IADL,CACUC,YAAY,IAAI;QAClB,OAAOH,QAAQ,CAAC;UAAEI,IAAI,EAAEP,aAAR;UAAuBQ,OAAO,EAAEF,YAAY,CAACG;QAA7C,CAAD,CAAf;MACH,CAHL,EAIKC,KAJL,CAIWC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAJpB;IAKP,CAND,CAME,OAAOA,KAAP,EAAc;MACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACH;EACJ,CAVD;AAWH;AAAA"},"metadata":{},"sourceType":"module"}